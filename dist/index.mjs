var PromiseQueue=class{promises=[];_all=null;_allSettled=null;get all(){return this._all??=Promise.all(this.promises),this._all}get allSettled(){return this._allSettled??=Promise.allSettled(this.promises),this._allSettled}push(promise){this.promises.push(promise),this._all=null,this._allSettled=null}resolveLazy(promise){return typeof promise=="function"?this.all.then(promise):promise}add(promise){let p=this.resolveLazy(promise);return this.push(p),this}clear(){let all=this.all;return this.promises.length=0,this._all=null,all}};var PromiseQueueMap=class _PromiseQueueMap{static DefaultGroup="default";groups=new Map;_all=null;_allSettled=null;static allPromises(groups){let allPromises=new Set;for(let group of groups)group.promises.forEach(promise=>allPromises.add(promise));return allPromises}get all(){return this._all?this._all:(this._all=Promise.all(_PromiseQueueMap.allPromises(this.groups.values())),this._all)}get allSettled(){return this._allSettled?this._allSettled:(this._allSettled=Promise.allSettled(_PromiseQueueMap.allPromises(this.groups.values())),this._allSettled)}ensureGroup(name){let group=this.groups.get(name);return group||(group=new PromiseQueue,this.groups.set(name,group)),group}cleanAll(){this._all=null,this._allSettled=null}static resolveLazy(promise,groups){return typeof promise=="function"?Promise.all(_PromiseQueueMap.allPromises(groups)).then(promise):promise}add(promise,groupNames=_PromiseQueueMap.DefaultGroup){let groups=(typeof groupNames=="string"?[groupNames]:groupNames).map(name=>this.ensureGroup(name)),p=_PromiseQueueMap.resolveLazy(promise,groups);return groups.forEach(group=>group.add(p)),this.cleanAll(),this}group(groupName=_PromiseQueueMap.DefaultGroup){return this.groups.get(groupName)?.all??Promise.resolve([])}clearGroup(groupName=_PromiseQueueMap.DefaultGroup){let group=this.groups.get(groupName);return this.cleanAll(),group?.clear()??Promise.resolve([])}clear(){let all=this.all;return this.groups.forEach(group=>group.clear()),this.groups.clear(),this.cleanAll(),all}};export{PromiseQueue,PromiseQueueMap};
//# sourceMappingURL=index.mjs.map