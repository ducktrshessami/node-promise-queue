{"version":3,"sources":["../src/index.ts","../src/PromiseQueue.ts","../src/PromiseQueueMap.ts"],"sourcesContent":["export * from \"./PromiseQueue\";\nexport * from \"./PromiseQueueMap\";\nexport * from \"./util\";\n","import { PromiseOrLazy } from \"./util\";\n\nexport class PromiseQueue {\n    public readonly promises: Promise<any>[] = [];\n    private _all: Promise<any[]> | null = null;\n\n    public get all(): Promise<any[]> {\n        this._all ??= Promise.all(this.promises);\n        return this._all;\n    }\n\n    protected push(promise: Promise<any>): void {\n        this.promises.push(promise);\n        this._all = null;\n    }\n\n    public resolveLazy<T>(promise: PromiseOrLazy<T>): Promise<T> {\n        return typeof promise === \"function\" ? this.all.then(promise) : promise;\n    }\n\n    public add(promise: PromiseOrLazy<any>): this {\n        const p = this.resolveLazy(promise);\n        this.push(p);\n        return this;\n    }\n\n    public clear(): Promise<any[]> {\n        const all = this.all;\n        this.promises.length = 0;\n        this._all = null;\n        return all;\n    }\n}\n","import { PromiseQueue } from \"./PromiseQueue\";\nimport { PromiseOrLazy } from \"./util\";\n\nexport class PromiseQueueMap {\n    public static readonly DefaultGroup = \"default\";\n\n    private readonly groups: Map<string, PromiseQueue> = new Map();\n    private _all: Promise<any[]> | null = null;\n\n    public get all(): Promise<any[]> {\n        if (this._all) {\n            return this._all;\n        }\n        const allPromises: Promise<any>[] = [];\n        this.groups.forEach(group => allPromises.push(...group.promises));\n        this._all = Promise.all(allPromises);\n        return this._all;\n    }\n\n    private ensureGroup(name: string): PromiseQueue {\n        let group = this.groups.get(name);\n        if (!group) {\n            group = new PromiseQueue();\n            this.groups.set(name, group);\n        }\n        return group;\n    }\n\n    public add(promise: PromiseOrLazy<any>, groupName: string = PromiseQueueMap.DefaultGroup): this {\n        const group = this.ensureGroup(groupName);\n        const p = group.resolveLazy(promise);\n        group.add(p);\n        this._all = null;\n        return this;\n    }\n\n    public group(groupName: string = PromiseQueueMap.DefaultGroup): Promise<any[]> {\n        const group = this.groups.get(groupName);\n        return group?.all ?? Promise.resolve([]);\n    }\n\n    public clearGroup(groupName: string = PromiseQueueMap.DefaultGroup): Promise<any[]> {\n        const group = this.groups.get(groupName);\n        this._all = null;\n        return group?.clear() ?? Promise.resolve([]);\n    }\n\n    public clear(): Promise<any[]> {\n        const all = this.all;\n        this.groups.forEach(group => group.clear());\n        this.groups.clear();\n        this._all = null;\n        return all;\n    }\n}\n"],"mappings":"wpBAAA,sJCEO,IAAM,aAAN,KAAmB,CACN,SAA2B,CAAC,EACpC,KAA8B,KAEtC,IAAW,KAAsB,CAC7B,YAAK,OAAS,QAAQ,IAAI,KAAK,QAAQ,EAChC,KAAK,IAChB,CAEU,KAAK,QAA6B,CACxC,KAAK,SAAS,KAAK,OAAO,EAC1B,KAAK,KAAO,IAChB,CAEO,YAAe,QAAuC,CACzD,OAAO,OAAO,SAAY,WAAa,KAAK,IAAI,KAAK,OAAO,EAAI,OACpE,CAEO,IAAI,QAAmC,CAC1C,IAAM,EAAI,KAAK,YAAY,OAAO,EAClC,YAAK,KAAK,CAAC,EACJ,IACX,CAEO,OAAwB,CAC3B,IAAM,IAAM,KAAK,IACjB,YAAK,SAAS,OAAS,EACvB,KAAK,KAAO,KACL,GACX,CACJ,EC7BO,IAAM,gBAAN,MAAM,gBAAgB,CACzB,OAAuB,aAAe,UAErB,OAAoC,IAAI,IACjD,KAA8B,KAEtC,IAAW,KAAsB,CAC7B,GAAI,KAAK,KACL,OAAO,KAAK,KAEhB,IAAM,YAA8B,CAAC,EACrC,YAAK,OAAO,QAAQ,OAAS,YAAY,KAAK,GAAG,MAAM,QAAQ,CAAC,EAChE,KAAK,KAAO,QAAQ,IAAI,WAAW,EAC5B,KAAK,IAChB,CAEQ,YAAY,KAA4B,CAC5C,IAAI,MAAQ,KAAK,OAAO,IAAI,IAAI,EAChC,OAAK,QACD,MAAQ,IAAI,aACZ,KAAK,OAAO,IAAI,KAAM,KAAK,GAExB,KACX,CAEO,IAAI,QAA6B,UAAoB,iBAAgB,aAAoB,CAC5F,IAAM,MAAQ,KAAK,YAAY,SAAS,EAClC,EAAI,MAAM,YAAY,OAAO,EACnC,aAAM,IAAI,CAAC,EACX,KAAK,KAAO,KACL,IACX,CAEO,MAAM,UAAoB,iBAAgB,aAA8B,CAE3E,OADc,KAAK,OAAO,IAAI,SAAS,GACzB,KAAO,QAAQ,QAAQ,CAAC,CAAC,CAC3C,CAEO,WAAW,UAAoB,iBAAgB,aAA8B,CAChF,IAAM,MAAQ,KAAK,OAAO,IAAI,SAAS,EACvC,YAAK,KAAO,KACL,OAAO,MAAM,GAAK,QAAQ,QAAQ,CAAC,CAAC,CAC/C,CAEO,OAAwB,CAC3B,IAAM,IAAM,KAAK,IACjB,YAAK,OAAO,QAAQ,OAAS,MAAM,MAAM,CAAC,EAC1C,KAAK,OAAO,MAAM,EAClB,KAAK,KAAO,KACL,GACX,CACJ","names":[]}